# -*- coding: utf-8 -*-
"""temp1.py.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gy_qf9wK5k61knpdfpPrfX8j8LNoTWVp
"""

from translate import Translator

def translate_specific_words_to_hindi_with_feedback(english_sentence, word_mapping):
    try:
        # Initialize a translator for English to Hindi
        translator = Translator(to_lang="hi")

        # Split the sentence into words
        words = english_sentence.split()

        # Initialize a list to store the translated words
        translated_words = []

        # Iterate through the words in the sentence
        for word in words:
            # Check if the current word should be translated
            if word.lower() in word_mapping:
                # Translate the word using the predefined mapping
                translated_word = word_mapping[word.lower()]
                # Append the translated word to the list
                translated_words.append(translated_word)
            else:
                # If the word should not be translated, append it as is
                translated_words.append(word)

        # Reconstruct the sentence
        hindi_sentence = ' '.join(translated_words)

        return hindi_sentence
    except Exception as e:
        return str(e)

if __name__ == "__main__":
    # Input an English sentence
    english_sentence = input("Enter an English sentence: ")

    # Define a mapping of specific English words to their Hindi equivalents
    word_mapping = {
        'feedback': 'टिप्पड़ी',
        'definitely': 'निश्चित रूप से',
        'even': 'अगर',
        'big': 'बड़ी',
        'products': 'उत्पाद',
        'mention': 'उल्लेख', # Mapping for "mention" in Hindi
        'bag': 'थैला'
        }

    # Call the function to translate and provide feedback
    hindi_translation = translate_specific_words_to_hindi_with_feedback(english_sentence, word_mapping)

    # Print the translated Hindi sentence
    print("\nHindi Translation:", hindi_translation)